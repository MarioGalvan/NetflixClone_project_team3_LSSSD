services:
  auth-service:
    build:
      context: ../auth
    ports:
      - "3001:3001"
    depends_on:
      - auth-mongodb
      - kafka
    env_file:
      - ../auth/.env

  accounts-service:
    build:
      context: ../accounts
    ports:
      - "3002:3002"
    depends_on:
      - mysql
      - kafka
    env_file:
      - ../accounts/.env

  content-service:
    build:
      context: ../content
    ports:
      - "3003:3003"
    depends_on:
      - content-mongodb
      - redis
    env_file:
      - ../content/.env
    environment:
      REDIS_URL: redis://redis:6379

  payment-service:
    build:
      context: ../payment
    ports:
      - "3004:3004"
    depends_on:
      - payment-mongodb
      - kafka
    env_file:
      - ../payment/.env

  recommender-service:
    build:
      context: ../recommender
    ports:
      - "3006:3006"
    depends_on:
      - recommender-mongodb
    env_file:
      - ../recommender/.env

  # streamer-service:
  #   build:
  #     context: ../streamer
  #   ports:
  #     - "3005:3005"
  #   env_file:
  #     - ../streamer/.env

  auth-mongodb:
    container_name: auth_mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27018:27018"

  content-mongodb:
    container_name: content_mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27021:27018"

  payment-mongodb:
    container_name: payment_mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27019:27018"

  recommender-mongodb:
    container_name: recommender_mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - "27020:27018"

  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe-cli
    depends_on:
      - payment-service
    command: "listen --api-key $${STRIPE_API_KEY} --device-name $${STRIPE_DEVICE_NAME} --forward-to payment-service:3004/api/webhook/"
    env_file:
      - ./stripe_cli.env

  mysql:
    container_name: mysql_container
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: project_team3
      MYSQL_DATABASE: netflix_accounts
      MYSQL_USER: netflix
      MYSQL_PASSWORD: project_team3
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d



  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_KRAFT_MODE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  redis:
    image: redis
    ports:
      - "6379:6379"
volumes:
  mysql_data:
